# Server configuration
server.port=8080

# H2 Database configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:file:./data/inventorydb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Use 'update' for development, 'none' or 'validate' for production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# CORS configuration
spring.mvc.cors.enabled=true # Enable CORS for all controllers by default
# This allows all origins, methods, and headers. For production, restrict 'origins' to your frontend's domain.
spring.mvc.cors.mapping./**.allowed-origins=*
spring.mvc.cors.mapping./**.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.mapping./**.allowed-headers=*

# NEW: JWT Configuration
# IMPORTANT: Replace with a very strong, randomly generated Base64 encoded string in production.
# A good way to generate one (e.g., in a Python console):
# import base64; import os; print(base64.urlsafe_b64encode(os.urandom(32)).decode()) # For HS256
# For HS512 (used here), you'd typically want at least 64 bytes of entropy before base64 encoding, so os.urandom(64)
jwt.secret=yourVeryStrongAndSecureJwtSecretKeyHereThatIsAtLeast64BytesLongAndBase64EncodedForHS512Algorithm
# Token validity in milliseconds (1 hour)
jwt.expiration=3600000

# NEW: Enable DEBUG logging for Spring MVC to diagnose request mapping issues
logging.level.org.springframework.web.servlet.mvc.method.annotation=DEBUG
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
